stages:
  - Update cache
  - Test

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_OPEN_MERGE_REQUESTS
      when: never
    - when: always

variables:
  PIP_CACHE_DIR: $CI_PROJECT_DIR/.cache/pip

.on-merge-request-event:
  interruptible: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
  tags:
    - docker

.on-main-branch-event:
  interruptible: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH == "main"
  tags:
    - docker

.on-tag-event:
  interruptible: true
  rules:
    - if: $CI_COMMIT_TAG

.on-schedule-event:
  interruptible: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  tags:
    - docker

.update-cache-template:
  stage: Update cache
  extends: .on-schedule-event
  allow_failure: true
  script:
    - echo "Dependencies cache updated"
  cache:
    policy: push

.python-job-template:
  image: python:3.11
  before_script:
    - python -m venv .venv
    - source .venv/bin/activate
    - pip install --no-cache-dir --upgrade pip
    - pip install --no-cache-dir setuptools_scm[toml]
    - curl -sSL https://pdm.fming.dev/install-pdm.py | python - --version v2.9.3
    - export PATH="/root/.local/bin:$PATH"
    - pdm config pypi.extra.url "$NEXUS_PYPI_PULL_URL"
    - pdm sync --dev -G :all -L lockfiles/cpu.lock
  cache:
    policy: pull
    paths:
      - .venv
    key: "python-venv"

Update Python cache:
  extends:
    - .python-job-template
    - .update-cache-template

Tests:
  extends:
    - .python-job-template
    - .on-merge-request-event
  stage: Test
  script:
    - coverage run --data-file .coverage.local_tests -m pytest tests/
  artifacts:
    paths:
      - .coverage.local_tests
    expire_in: 1 hour
    when: always

Code coverage:
  extends:
    - .python-job-template
    - .on-merge-request-event
  stage: Test
  needs:
    - Tests
  script:
    - coverage combine
    - coverage xml -o coverage.xml
    - coverage report -m --skip-covered
  coverage: '/\d+\%\s*$/'
  allow_failure: true
  when: always
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

Check code formatting:
  extends:
    - .python-job-template
    - .on-merge-request-event
  stage: Test
  script:
    - black --preview --check .

Lint:
  extends:
    - .python-job-template
    - .on-merge-request-event
  stage: Test
  script:
    - ruff check .

Type check:
  extends:
    - .python-job-template
    - .on-merge-request-event
  stage: Test
  script:
    - mypy .

Check dependencies:
  extends:
    - .python-job-template
    - .on-merge-request-event
  stage: Test
  script:
    - deptry .

Check lockfiles:
  extends:
    - .python-job-template
    - .on-merge-request-event
  stage: Test
  script:
    - pdm lock --check -L lockfiles/cpu.lock
    - pdm lock --check -L lockfiles/gpu.lock
